" Modeline and Notes {
" vim: set nospell foldmarker={,} foldlevel=0 foldmethod=marker:
"
" This is the personal .vimrc file of Xing Zhou
" It can be found, along with other configuration files @
"
" https://github.com/dekom/Dot_files
"
" Inspiration from spf13-vim @
" https://github.com/spf13/spf13-vim
" }

" Enviroment {
  " Basics {
    set nocompatible " Allow all vim functions
    set clipboard=unnamedplus " Linux copy-paste
  " }

  " Filetype Workarounds {
    " https://github.com/ChrisYip/Better-CSS-Syntax-for-Vim/issues/9
    autocmd BufNewFile,BufRead *.scss set filetype=css
    autocmd BufNewFile,BufRead *.sass set filetype=css
  " }

  " Load Bundles {
    if filereadable(expand("~/.vim/bundlesrc"))
      source ~/.vim/bundlesrc
    endif
  " }
" }

" General {
  set encoding=utf-8
  set background=dark         " Assume a dark background
  filetype plugin indent on   " Automatically detect file types.
  syntax on                   " syntax highlight
  set mouse=a                 " automatically enable mouse usage
  scriptencoding utf-8

  set history=10000           " increase history size
  set spell                   " turn on spellcheck
  set hidden                  " buffer is hidden instead of abandoned, can switch buffer without saving

  " Setting up the directories {
    set backup                  " create backup files

    if has('persistent_undo')
      set undofile              " save undos for files
      set undolevels=1000       " max number of undos
      set undoreload=10000      " maximum number lines to save for undo on a buffer reload
    endif

    autocmd BufWinLeave *.* silent! mkview    " make vim save view state
    autocmd BufWinEnter *.* silent! loadview  " make vim load state
  " }
" }

" Vim UI {
  " Colorscheme {
    if filereadable(expand("~/.vim/bundle/vim-colors-solarized/colors/solarized.vim"))
      let g:solarized_termcolors=256
      let g:solarized_termtrans=1
      let g:solarized_contrast="high"
      let g:solarized_visibility="high"
      color solarized           " load solarized colorscheme
    endif
  "}

  set showmode                " show the mode
  set cursorline              " highlight the cursor line

  set foldenable              " auto fold code
  set vb t_vb=                " disable visualbeep

  " Status line {
    if has('cmdline_info')
      set ruler                   " show ruler information
      set showcmd                 " show partial commands in status line
    endif

    if has('statusline')
      set laststatus=2

      set statusline=%<%f\        " filename
      set statusline+=%w%h%m%r    " options
      set statusline+=%{fugitive#statusline()} " Git status
      set statusline+=\ [%{&ff}/%Y] " filetype
      set statusline+=\ [%{getcwd()}] " current dir
      set statusline+=%=%30(%=\:%b\ %n%y%m%r%w\ (%l,%c%V)\ %p%%%)
    endif

    set fillchars+=stl:\ ,stlnc:\ 
  " }

  set backspace=indent,eol,start  " appropriate backspace
  set linespace=0                 " no space between lines
  set nu                          " show linenumbers
  set showmatch                   " show matching brackets
  set incsearch                   " search as you type
  set hlsearch                    " highlight search
  set winminheight=0              " windows can be 0 line high
  set ignorecase                  " case insensitive search
  set smartcase                   " case sensitive when uc present
  set wildmenu                    " show list instead of just completing
  set wildmode=list:longest,full  " command <Tab> completition, list matches, then longest common part, then all
  set scrolloff=3                 " minimum lines to keep above and below cursor

  set list                        " display unprintable characters
  set listchars=tab:,.,trail:.,extends:#,nbsp:. "Highlight probelmatic whitespace
" }

" Formatting {
  set nowrap        " wrap long lines
  set autoindent    " indent at the same level as the previous line

  " Tab Settings {
    set tabstop=2         " an indentation every 2 columns
    set shiftwidth=2      " use indents of 2 spaces
    set softtabstop=2     " let backspace delete indent
    set expandtab         " tabs are spaces
    set pastetoggle=<F12> " paste with correct indentation
  " }

  " Remove trailing whitespaces and ^M chars
  autocmd FileType c,cpp,java,php,javascript,python,twig,xml,yml autocmd BufWritePre <buffer> :call setline(1,map(getline(1,$),'substitute(v:val,\s\+$,,)'))
  autocmd BufNewFile,BufRead *.html.twig set filetype=html.twig
" }

" Key mappings {
  nnoremap Y y$     " Yank from cursor to the end of the file, to be consistent with C and D

  " Fold levels {
    nmap <leader>f0 :set foldlevel=0<CR>
    nmap <leader>f1 :set foldlevel=1<CR>
    nmap <leader>f2 :set foldlevel=2<CR>
    nmap <leader>f3 :set foldlevel=3<CR>
    nmap <leader>f4 :set foldlevel=4<CR>
    nmap <leader>f5 :set foldlevel=5<CR>
    nmap <leader>f6 :set foldlevel=6<CR>
    nmap <leader>f7 :set foldlevel=7<CR>
    nmap <leader>f8 :set foldlevel=8<CR>
    nmap <leader>f9 :set foldlevel=9<CR>
  " }

  nmap <silent> <leader>/ :let @/=''<CR>  " Remove highlights for the current term
" }

" Plugin Configurations {
" }
